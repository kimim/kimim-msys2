#+TITLE: MSYS64 with emacs, texlive and more

This is a customized msys2 distro with additional applications for my
daily use. Software and configurations include: mingw64 cli tools,
emacs, texlive, doublecmd, firefox, sumatrapdf, rime, ...

With this repo, I can have a uniform tools over Windows.

The setting up steps:

* Basic installation

1. install msys2 to anywhere, for example, =C:\Users\kimim\msys64=
2. install texlive to =C:\Users\kimim\msys64\texlive=
3. add customizations from http://github.com/kimim/kimim-msys2
   #+begin_src shell
   cd C:\Users\kimim\msys64
   git init
   git remote add origin http://github.com/kimim/kimim-msys2
   git fetch
   git reset origin/master
   git checkout -t origin/master
   #+end_src

* Configure Windows
** remap keys

As an Emacs user, I prefer to remmap ~LShift~ to ~LCtrl~ and ~Caps~ to
~LShift~. remap the keys with this ~reg~ file:

[[./kimikit/fix/swapcap.reg]]

** fix inactive title bar color

Inactive Windows title bar background color is light gray, which is
too light in dark theme, so I turn it to dark color with this ~reg~
setting:

[[./kimikit/fix/color.reg]]

* Add more MinGW tools

#+begin_src shell
pacman -S mingw64/mingw-w64-x86_64-emacs \
       mingw64/mingw-w64-x86_64-rust \
       mingw64/mingw-w64-x86_64-clang \
       mingw64/mingw-w64-x86_64-go \
       mingw64/mingw-w64-x86_64-python-pygments \
       mingw64/mingw-w64-x86_64-graphviz \
       mingw64/mingw-w64-x86_64-sqlite3 \
       mingw64/mingw-w64-x86_64-ag
#+end_src

#+RESULTS:

* Update Info dir

#+begin_src shell
cd /mingw64/share/info
ls *.info* | xargs -I {} install-info {} dir
#+end_src

** Compile texi

pacman -S msys/texinfo-tex mingw64/mingw-w64-x86_64-diffutils

* C++

** Add gsl lib
- put =gsl= to =C:\Users\CNJIMA5\msys64\mingw64\include\c++\10.3.0\=

** clangd

#+begin_src shell
pacman -S mingw-w64-x86_64-clang-tools-extra
#+end_src

* Java

Java is required by Clojure.

- Visit version tag at https://github.com/graalvm/graalvm-ce-builds/tags
- Download ~graalvm-ce-java16-windows-amd64-21.x.x.zip~
- Unzip to ~/usr/local/lib/graalvm-ce-java16-21.x.x~
- Set ~PATH~ at [[./etc/profile]], for example:
  #+begin_src sh
  export JAVA_HOME=`cygpath -w /usr/local/lib/graalvm-ce-java11-21.0.0`
  export PATH=$PATH:/usr/local/lib/graalvm-ce-java11-21.0.0/bin/
  export PATH=$PATH:/usr/local/lib/graalvm-ce-java11-21.0.0/languages/js/bin/
  #+end_src

* Clojure

#+begin_src shell
curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -o lein
chmod +x lein
mv lein /usr/local/bin
lein
#+end_src

* Emacs
** Support SVG in Emacs

https://www.emacswiki.org/emacs/EmacsSvg

#+begin_src shell
pacman -S mingw64/mingw-w64-x86_64-librsvg
#+end_src

#+begin_src emacs-lisp
(auto-image-file-mode 1)
#+end_src

* nsswitch.conf

remove db in nsswitch.conf:

#+begin_example
- passwd: files db
- group: files db
+ passwd: files
+ group: files
#+end_example

Then put passwd and group information to files:

#+begin_src sh
getent passwd $(id -u) > /etc/passwd
getent group $(id -G) > /etc/group
#+end_src

Otherwise, you will get this kind of error, when you start a shell terminal:

#+begin_example
Could not fork child process: There are no available terminals (-1)
#+end_example

* proxy

#+begin_src shell
pacman -S openssh-netcat
#+end_src
* Backup

- Before backup, remove files under ~/var/cache/pacman/pkg/~
- compress files excludes: ~home~, ~texlive~ and ~tmp~
